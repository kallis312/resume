---
// import Photo from '@/components/photo.astro';
import type { MainSection } from '@/types/sections/main-section.types';
import Description from '@/web/components/description.astro';
import LabelledValue from '@/web/components/labelled-value.astro';
import LinkButton from '@/web/components/link-button.astro';
import SectionCard from '@/web/components/section-card.astro';
import TagsList from '@/web/components/tags-list.astro';
import Typography from '@/web/components/typography.astro';

export interface Props extends MainSection {}

const { config, description, details, fullName, links, role, tags } = Astro.props;
---

<SectionCard {...config} hideTitle>
  <div class="flex flex-col items-start gap-6 sm:flex-row">
    <!-- <div class="flex items-center gap-4 sm:flex-col">
      <Photo
        src={image}
        alt={fullName}
        width={240}
        height={240}
        class="h-24 w-24 max-w-none rounded-lg border-4 border-gray-200 sm:h-36 sm:w-36 md:h-36 md:w-36"
      /> -->
    <!-- <DownloadButton {...action} /> -->
  </div>
  <div class="flex w-full flex-col gap-5">
    <div class="flex w-full flex-col justify-between gap-2 sm:flex-row">
      <div class="w-full">
        <Typography variant="main-title">{fullName}</Typography>
        <Typography variant="main-subtitle">{role}</Typography>
      </div>
      {
        links.length > 0 && (
          <div class="flex flex-wrap gap-3 sm:flex-nowrap">
            {links.map((link) => (
              <LinkButton {...link} />
            ))}
          </div>
        )
      }
    </div>
    <div class="flex flex-col gap-6">
      <div class="inline-grid xl:grid-cols-[auto_auto]">
        {details.map((detail) => <LabelledValue {...detail} />)}
      </div>
      <div class="flex flex-col gap-4">
        <Description content={description} />
        <TagsList tags={tags} />
      </div>
    </div>
  </div>
</SectionCard>
